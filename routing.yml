---
 - name: Iptables
   hosts: all # все машины
   become: true
   
   tasks:
    - name: inetRouter configuration # Настройка inetRouter
      block: 

        - name: add route 0.0/28 for inetRouter # указываем обратные маршруты для centralServer
          lineinfile:
            dest: /etc/sysconfig/network-scripts/route-eth1
            line: 192.168.0.0/28 via 192.168.255.2
          notify: restart network # вызываем handler на перезапуск сетевых интерфейсов        

        - name: reload iptables # перечитываем конфиг iptables
          become: yes
          shell: iptables-restore < /home/vagrant/iptables.rules

        - name: save iptables # сохраняем изменения конфига iptables
          become: yes
          shell: service iptables save

      when: (ansible_hostname == "inetRouter") # все действия по настройке NAT выполняются на inetRouter

    - name: inetRouter2 configuration # Настройка inetRouter2
      block:
        - name: add route 0.0/28 for inetRouter # указываем обратные маршруты для centralServer
          lineinfile:
            dest: /etc/sysconfig/network-scripts/route-eth1
            line: 192.168.0.0/28 via 192.168.255.2
          notify: restart network # вызываем handler на перезапуск сетевых интерфейсов

        - name: reload iptables # перечитываем конфиг iptables
          become: yes
          shell: iptables-restore < /home/vagrant/iptables

        - name: save iptables # сохраняем изменения конфига iptables
          become: yes
          shell: service iptables save

        - name: iptables dnat # производим настройку в цепи PREROUTING таблицы nat для изменяения целевого адреса пакета
          iptables:
            table: nat
            chain: PREROUTING
            protocol: tcp
            destination_port: 8080
            to_destination: "192.168.0.2:80"
            jump: DNAT
          tags:
            - deploy
            - iptables-dnat

        - name: iptables snat # для отправки ответа клиенту с web сервера производим настройку в цепи POSTROUTING таблицы nat
          iptables:
            table: nat
            chain: POSTROUTING
            protocol: tcp
            destination_port: 80
            to_source: "192.168.255.3"
            jump: SNAT
          tags:
            - iptables-snat

      when: (ansible_hostname == "inetRouter2") # все действия выполняются на inetRouter
  
    - name: remov default gateway for eth0 servers and routers # отключаем на centralRouter и centralServer маршрут по умолчани на интерфейсе eth0 (дефолтный выход в internet)
      lineinfile:
        dest: /etc/sysconfig/network-scripts/ifcfg-eth0
        line: DEFROUTE=no 
      when: (ansible_hostname == "centralRouter") or 
            (ansible_hostname == "centralServer")

    - name: centralRouter configuration # Настройка centralRouter
      block: 
        - name: add default gateway for centralRouter #  назначаем маршрут по умолчани для centralRouter на интерфейс eth1
          lineinfile:
            dest: /etc/sysconfig/network-scripts/ifcfg-eth1
            line: GATEWAY=192.168.255.1 
          notify: restart network # вызываем handler на перезапуск сетевых интерфейсов

        - name: Install nmap # устанавливаем nmap для выполнения knock скрипта
          yum:
            name: nmap
            state: present

        - name: reload iptables # перечитываем конфиг iptables
          become: yes
          shell: iptables-restore < /home/vagrant/iptables

        - name: save iptables # сохраняем изменения конфига iptables
          become: yes
          shell: service iptables save

      when: (ansible_hostname == "centralRouter") # все действия выполняются на centralRouter

    - name: centralServer configuration # Настройка centralServer
      block:                                          
        - name: add default gateway for centralServer # назначаем маршрут по умолчани для centralServer на интерфейс eth1
          lineinfile:
            dest: /etc/sysconfig/network-scripts/ifcfg-eth1
            line: GATEWAY=192.168.0.1
          notify: restart network # вызываем handler на перезапуск сетевых интерфейсов                 

        - name: reload iptables # перечитываем конфиг iptables
          become: yes
          shell: iptables-restore < /home/vagrant/iptables

        - name: save iptables # сохраняем изменения конфига iptables
          become: yes
          shell: service iptables save

        - name: Install EPEL Repo package from standart repo # устанавливаем epel-release
          yum:
            name: epel-release
            state: present

        - name: Install nginx # устанавливаем nginx
          yum:
            name: nginx
            state: present

        - name: Configure nginx # переносим с хоста conf файл nginx
          template:
            src: nginx.conf
            dest: /etc/nginx/nginx.conf
          notify: start nginx # вызываем handler на запуск nginx

        - name: index.html # переносим с хоста тело сайта (темтового сообщения)
          template:
            src: index.html
            dest: /usr/share/nginx/html/index.html
          notify: restart nginx # вызываем handler на перезапуск nginx

      when: (ansible_hostname == "centralServer") # все действия выполняются на centralRouter


   handlers:
    - name: start iptables # handler на запуск iptables
      become: true
      ansible.builtin.systemd:
        service: iptables.service
        state: started
        enabled: true

    - name: restart network # handler на перезапуск network
      become: true
      ansible.builtin.systemd:
        name: network
        state: restarted
        enabled: true

    - name: enable nginx
      become: true
      ansible.builtin.systemd:
        name: nginx
        enabled: yes

    - name: start nginx # handler на запуск nginx
      become: true
      ansible.builtin.systemd:
        name: nginx
        state: started
        enabled: true

    - name: restart nginx # handler на перезапуск nginx
      become: true
      ansible.builtin.systemd:
        name: nginx
        state: restarted
        enabled: true